
openapi: 3.0.0
info:
  title: OTT Platform Admin APIs
  description: Administrator-facing APIs for content and user management
  version: 1.0.0
  contact:
    name: Admin API Support
    email: admin-support@ottplatform.com

servers:
  - url: http://localhost:3006/api/admin
    description: Development server
  - url: https://api.ottplatform.com/admin
    description: Production server

paths:
  /content:
    get:
      summary: Get all content with admin filters
      tags:
        - Admin Content Management
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: type
          in: query
          schema:
            type: string
            enum: [movie, series]
        - name: genre
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
        - name: isActive
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Content list retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/Content'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
    post:
      summary: Create new content
      tags:
        - Admin Content Management
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContent'
      responses:
        '201':
          description: Content created successfully
        '400':
          description: Validation error
        '403':
          description: Admin access required

  /content/{id}:
    get:
      summary: Get content details by ID
      tags:
        - Admin Content Management
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Content details retrieved successfully
        '404':
          description: Content not found
    put:
      summary: Update content
      tags:
        - Admin Content Management
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContent'
      responses:
        '200':
          description: Content updated successfully
        '404':
          description: Content not found
    delete:
      summary: Delete content (soft delete)
      tags:
        - Admin Content Management
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Content deleted successfully
        '404':
          description: Content not found

  /users:
    get:
      summary: Get all users with admin filters
      tags:
        - Admin User Management
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: role
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [active, blocked, inactive]
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Users list retrieved successfully

  /users/{id}:
    get:
      summary: Get user details by ID
      tags:
        - Admin User Management
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User details retrieved successfully
        '404':
          description: User not found

  /users/{id}/block:
    patch:
      summary: Block a user
      tags:
        - Admin User Management
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  maxLength: 500
      responses:
        '200':
          description: User blocked successfully
        '404':
          description: User not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Content:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [movie, series]
        genre:
          type: array
          items:
            type: string
        ageRating:
          type: string
        duration:
          type: integer
        releaseYear:
          type: integer
        director:
          type: string
        cast:
          type: array
          items:
            type: string
        language:
          type: string
        isActive:
          type: boolean
        views:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateContent:
      type: object
      required:
        - title
        - type
        - genre
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 2000
        type:
          type: string
          enum: [movie, series]
        genre:
          type: array
          items:
            type: string
        ageRating:
          type: string
          enum: [G, PG, PG-13, R, NC-17]
        duration:
          type: integer
          minimum: 1
        releaseYear:
          type: integer
          minimum: 1900
        director:
          type: string
          maxLength: 255
        cast:
          type: array
          items:
            type: string
        language:
          type: string
          maxLength: 10

    UpdateContent:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 2000
        genre:
          type: array
          items:
            type: string
        ageRating:
          type: string
          enum: [G, PG, PG-13, R, NC-17]
        duration:
          type: integer
          minimum: 1
        isActive:
          type: boolean

    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
        totalPages:
          type: integer
        totalItems:
          type: integer
        itemsPerPage:
          type: integer

security:
  - bearerAuth: []
